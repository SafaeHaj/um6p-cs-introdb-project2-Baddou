Enter password: ****
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 31
Server version: 8.0.34 MySQL Community Server - GPL

Copyright (c) 2000, 2023, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> CREATE DATABASE Project2;
Query OK, 1 row affected (0.16 sec)

mysql> USE Project2;
Database changed
mysql> CREATE TABLE FidelityCard(
    -> fctype VARCHAR(20) NOT NULL,
    -> reduction INT NOT NULL,
    -> PRIMARY KEY (fctype),
    -> CONSTRAINT check_reduction CHECK (reduction < 70)
    -> );
Query OK, 0 rows affected (0.58 sec)

mysql> CREATE TABLE AirplaneModel(
    ->     economySeats INT,
    ->     premiumEconomySeats INT,
    ->     businessClassSeats INT,
    ->     maxweight INT,
    ->     model VARCHAR(20),
    ->     PRIMARY KEY (model)
    -> );
Query OK, 0 rows affected (0.65 sec)

mysql> CREATE TABLE Airplane(
    ->     registrationNumber INT not null auto_increment,
    ->     airline VARCHAR(20) NOT NULL,
    ->     model VARCHAR(20) NOT NULL,
    ->     PRIMARY KEY (registrationNumber),
    ->     FOREIGN KEY (model) REFERENCES AirplaneModel(model) ON DELETE no action
    -> );
Query OK, 0 rows affected (0.55 sec)
mysql> CREATE TABLE User_ (
    ->     uemail VARCHAR(20) NOT NULL,
    ->     ufirstName VARCHAR(20) NOT NULL,
    ->     ulastName VARCHAR(20) NOT NULL,
    ->     ubirthDate DATE NOT NULL ,
    ->     passwordHash VARCHAR(64) NOT NULL,
    ->     PRIMARY KEY (uemail)
    -> );
Query OK, 0 rows affected (0.35 sec)
mysql> CREATE TABLE Reservation (
    ->     rid VARCHAR(20) NOT NULL,
    ->     dateReservation DATETIME NOT NULL,
    ->     dateConfirmation DATETIME NOT NULL,
    ->     email VARCHAR(20) NOT NULL,
    ->     PRIMARY KEY (rid),
    ->     FOREIGN KEY (email) REFERENCES User_(uemail) ON DELETE no action,
    ->     CHECK (dateReservation < dateConfirmation),
    ->     CHECK (DATEDIFF(dateConfirmation, dateReservation) <= 1)
    -> );
Query OK, 0 rows affected (0.26 sec)
mysql> CREATE TABLE Flight(
    ->     fid VARCHAR(20) NOT NULL,
    ->     arrivalTime DATETIME NOT NULL,
    ->     departureTime DATETIME NOT NULL,
    ->     destination VARCHAR(20) NOT NULL,
    ->     departure VARCHAR(20) NOT NULL,
    ->     registrationNumber INT default 0,
    ->     PRIMARY KEY (fid),
    ->     FOREIGN KEY (registrationNumber) REFERENCES Airplane(registrationNumber) ON DELETE set null
    -> );
Query OK, 0 rows affected (0.25 sec)
mysql> CREATE TABLE Checks(
    ->     email VARCHAR(20) NOT NULL,
    ->     fid VARCHAR(20) NOT NULL,
    ->     PRIMARY KEY (email, fid),
    ->     FOREIGN KEY (email) REFERENCES User_(uemail) ON DELETE cascade,
    ->     FOREIGN KEY (fid) REFERENCES Flight(fid) on delete cascade
    -> );
Query OK, 0 rows affected (0.94 sec)
mysql> CREATE TABLE Checks(
    ->     email VARCHAR(20) NOT NULL,
    ->     fid VARCHAR(20) NOT NULL,
    ->     PRIMARY KEY (email, fid),
    ->     FOREIGN KEY (email) REFERENCES User_(uemail) ON DELETE cascade,
    ->     FOREIGN KEY (fid) REFERENCES Flight(fid) on delete cascade
    -> );
Query OK, 0 rows affected (0.94 sec)

mysql> CREATE TABLE PassengerCard(
    ->     fctype VARCHAR(20) NOT NULL,
    ->     fcid VARCHAR(20) NOT NULL,
    ->     PRIMARY KEY (fcid),
    ->     FOREIGN KEY (fctype) REFERENCES FidelityCard(fctype) on delete cascade
    -> );
Query OK, 0 rows affected (0.24 sec)

mysql> CREATE TABLE PassengerInfos(
    ->     cin VARCHAR(20) NOT NULL,
    ->     pbirthDate DATE NOT NULL,
    ->     passportID VARCHAR(20) NOT NULL,
    ->     phoneNumber VARCHAR(20),
    ->     pfirstName VARCHAR(20) NOT NULL,
    ->     plastName VARCHAR(20) NOT NULL,
    ->     fcid VARCHAR(20),
    ->     PRIMARY KEY (passportID),
    ->     FOREIGN KEY (fcid) REFERENCES PassengerCard(fcid) on delete set null
    -> );
Query OK, 0 rows affected (0.16 sec)

mysql> CREATE TABLE Ticket(
    ->     ticketID VARCHAR(20) NOT NULL,
    ->     seatNumber INT UNIQUE,
    ->     price FLOAT NOT NULL,
    ->     passportID VARCHAR(20) NOT NULL,
    ->     rid VARCHAR(20) NOT NULL,
    ->     fid VARCHAR(20) NOT NULL,
    ->     fctype VARCHAR(20) ,
    ->     class VARCHAR(20) NOT NULL,
    ->     PRIMARY KEY (ticketID),
    ->     FOREIGN KEY (fctype) REFERENCES FidelityCard(fctype) on delete set null,
    ->     FOREIGN KEY (passportID) REFERENCES PassengerInfos(passportID) on delete cascade,
    ->     FOREIGN KEY (rid) REFERENCES Reservation(rid)on delete cascade,
    ->     FOREIGN KEY (fid) REFERENCES Flight(fid) on delete no action
    -> );
Query OK, 0 rows affected (0.53 sec)
mysql> CREATE INDEX uchecks
    -> ON Checks(email);
Query OK, 0 rows affected (0.61 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> CREATE INDEX fticket
    -> ON Ticket(fid);
Query OK, 0 rows affected (0.18 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> CREATE INDEX ureservation
    -> ON Reservation(email);
Query OK, 0 rows affected (0.21 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> CREATE INDEX dep_dest
    -> ON Flight(departure, destination, departureTime);
Query OK, 0 rows affected (0.23 sec)
Records: 0  Duplicates: 0  Warnings: 0
mysql> DELIMITER //
mysql> CREATE TRIGGER checkValidReservation
    -> BEFORE INSERT ON Reservation
    -> FOR EACH ROW
    -> BEGIN
    ->     DECLARE adult_count INT;
    ->
    ->     -- number of accompanying adults
    ->     SELECT COUNT(*) INTO adult_count
    ->     FROM Ticket
    ->     INNER JOIN Passenger ON Ticket.passportID = Passenger.passportID
    ->     WHERE Ticket.rid = NEW.rid AND YEAR(CURDATE()) - YEAR(Passenger.pbirthDate) >= 16;
    ->
    ->     IF adult_count = 0 THEN
    ->         SIGNAL SQLSTATE '45000'
    ->         SET MESSAGE_TEXT = 'Reservation refused. No accompanying adult is registered.';
    ->     END IF;
    -> END;
    -> //
Query OK, 0 rows affected (0.25 sec)
mysql> //
ERROR:
No query specified

mysql> CREATE TRIGGER user_age_check
    -> BEFORE INSERT ON User_
    -> FOR EACH ROW
    -> BEGIN
    ->     IF DATEDIFF(NOW(), NEW.ubirthDate) < 6570 THEN
    ->         SIGNAL SQLSTATE '45000'
    ->         SET MESSAGE_TEXT = 'Users must be 18 years or older.';
    ->     END IF;
    -> END;
    -> //
Query OK, 0 rows affected (0.12 sec)
mysql> //
ERROR:
No query specified

mysql> CREATE TRIGGER reservations_date_check
    -> BEFORE INSERT ON Reservation
    -> FOR EACH ROW
    -> BEGIN
    ->     IF DATEDIFF(NOW(), NEW.dateConfirmation) >= 0 THEN
    ->         SIGNAL SQLSTATE '45000'
    ->         SET MESSAGE_TEXT = 'date of reservation are not valid';
    ->     END IF;
    -> END;
    -> //
Query OK, 0 rows affected (0.12 sec)